
module msrv32_instruction_mux_tb();

reg flush_in;
reg [31:0]ms_riscv32_mp_instr_in;
wire [6:0]opcode_out;
wire [2:0]funct3_out;
wire [6:0]funct7_out;
wire [4:0]rs1addr_out, rs2addr_out, rdaddr_out;
wire [11:0] csr_addr_out;
wire [24:0] instr_out;

wire [31:0] instr_mux;

msrv32_instruction_mux DUT (.flush_in(flush_in), .ms_riscv32_mp_instr_in(ms_riscv32_mp_instr_in), .opcode_out(opcode_out), 
                            .funct3_out(funct3_out), .funct7_out(funct7_out), .rs1addr_out(rs1addr_out), .rs2addr_out(rs2addr_out),  
                            .rdaddr_out(rdaddr_out), .csr_addr_out(csr_addr_out), .instr_out(instr_out));

initial 
begin 
  ms_riscv32_mp_instr_in = 32'b 01001111_01011010_11110000_00110011;
end

initial
begin
  flush_in = 1'b1;
  #20;
  flush_in = 1'b0;
  #20;
  flush_in = 1'b1;
  #30;
  flush_in = 1'b0;
end

initial
  $monitor ("Opcode = %b, Function3 = %b, Function7 = %b, Rs1 address = %b, Rs2 address = %b, Rd address = %b, csr address = %b, Instruction = %b"
            ,opcode_out, funct3_out, funct7_out, rs1addr_out, rs2addr_out, rdaddr_out, csr_addr_out, instr_out);
endmodule
